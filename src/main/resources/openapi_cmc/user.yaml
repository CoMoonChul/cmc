openapi: 3.0.0
info:
  title: User api
  description: Cmc User api
  version: 1.0.0

servers:
  - url: http://localhost:8080

tags:
  - name: join-controller
    description: Join api controller

  - name: login-controller
    description: Login api controller

paths:
  # join-controller
  /v1/join:
    post:
      tags:
        - join-controller
      summary: "API_USER_0001 회원가입"
      description: "회원가입 API"
      operationId: "join"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./dto/user/JoinDTO.yaml#/components/schemas/JoinRequest"
      responses:
        "200":
          description: "회원가입 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/JoinDTO.yaml#/components/schemas/JoinResponse"

  /v1/checkUserId:
    get:
      tags:
        - join-controller
      summary: "API_USER_0002 ID 중복 체크"
      description: "ID 중복 체크 API"
      operationId: "checkUserId"
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "ID 중복 체크 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/JoinDTO.yaml#/components/schemas/JoinCheckResponse"

  /v1/checkUserName:
    get:
      tags:
        - join-controller
      summary: "API_USER_0003 닉네임 중복 체크"
      description: "닉네임 중복 체크 API"
      operationId: "checkUserName"
      parameters:
        - name: userName
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "닉네임 중복 체크 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/JoinDTO.yaml#/components/schemas/JoinCheckResponse"

  # login-controller
  /v1/temp/login:
    post:
      tags:
        - login-controller
      summary: "API_USER_9999 임시로그인"
      description: 임시로그인 API
      operationId: "tempLogin"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./dto/user/TempLoginDTO.yaml#/components/schemas/TempLoginRequest"
      responses:
        "200":
          description: "임시로그인 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/TempLoginDTO.yaml#/components/schemas/TempLoginResponse"

components:
  schemas:
    User:
      $ref: './entity/UserEntity.yaml#/User'