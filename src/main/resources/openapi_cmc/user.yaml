openapi: 3.0.0
info:
  title: User api
  description: Cmc User api
  version: 1.0.0

servers:
  - url: http://localhost:8080

tags:
  - name: join-controller
    description: Join api controller

  - name: login-controller
    description: Login api controller

  - name: user-controller
    description: User api controller

paths:
  # join-controller
  /user/join:
    post:
      tags:
        - join-controller
      summary: "API_USER_0001 회원가입"
      description: "회원가입 API"
      operationId: "join"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./dto/user/JoinDTO.yaml#/components/schemas/JoinReqDTO"
      responses:
        "200":
          description: "회원가입 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/JoinDTO.yaml#/components/schemas/JoinResDTO"

  /user/join/google:
    post:
      tags:
        - join-controller
      summary: "API_USER_0011 구글 회원가입"
      description: "구글 회원가입 API"
      operationId: "joinGoogle"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./dto/user/JoinDTO.yaml#/components/schemas/JoinGoogleReqDTO"
      responses:
        "200":
          description: "회원가입 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/JoinDTO.yaml#/components/schemas/JoinGoogleResDTO"

  /user/checkUserId:
    get:
      tags:
        - join-controller
      summary: "API_USER_0002 ID 중복 체크"
      description: "ID 중복 체크 API"
      operationId: "checkUserId"
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "ID 중복 체크 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/JoinDTO.yaml#/components/schemas/CheckJoinResDTO"

  /user/checkUsername:
    get:
      tags:
        - join-controller
      summary: "API_USER_0003 닉네임 중복 체크"
      description: "닉네임 중복 체크 API"
      operationId: "checkUsername"
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "닉네임 중복 체크 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/JoinDTO.yaml#/components/schemas/CheckJoinResDTO"

  # login-controller
  /user/tempLogin:
    post:
      tags:
        - login-controller
      summary: "API_USER_9999 임시로그인"
      description: 임시로그인 API
      operationId: "tempLogin"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./dto/user/LoginDTO.yaml#/components/schemas/TempLoginReqDTO"
      responses:
        "200":
          description: "임시로그인 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/LoginDTO.yaml#/components/schemas/TempLoginResDTO"

  /user/login:
    post:
      tags:
        - login-controller
      summary: "API_USER_0004 로그인"
      description: 로그인 API
      operationId: "login"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./dto/user/LoginDTO.yaml#/components/schemas/LoginReqDTO"
      responses:
        "200":
          description: "로그인 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/LoginDTO.yaml#/components/schemas/LoginResDTO"

  /user/refresh:
    post:
      tags:
        - login-controller
      summary: "API_USER_0005 AccessToken 재발급"
      description: AccessToken 재발급 API
      operationId: "refresh"
      responses:
        "200":
          description: "AccessToken 재발급 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/LoginDTO.yaml#/components/schemas/RefreshResDTO"

  /user/tempRefresh:
    post:
      tags:
        - login-controller
      summary: "API_USER_XXXX AccessToken 재발급(임시)"
      description: AccessToken 재발급 API(임시)
      operationId: "tempRefresh"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./dto/user/LoginDTO.yaml#/components/schemas/RefreshReqDTO"
      responses:
        "200":
          description: "AccessToken 재발급 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/LoginDTO.yaml#/components/schemas/RefreshResDTO"

  /user/logout:
    post:
      tags:
        - login-controller
      summary: "API_USER_0006 로그아웃"
      description: 로그아웃 API
      operationId: "logout"
      responses:
        "200":
          description: "로그아웃 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/LoginDTO.yaml#/components/schemas/LogoutResDTO"

  /user/findAccount:
    post:
      tags:
        - login-controller
      summary: "API_USER_0007 계정 찾기"
      description: 계정 찾기 API
      operationId: "findAccount"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./dto/user/LoginDTO.yaml#/components/schemas/FindAccountReqDTO"
      responses:
        "200":
          description: "계정 찾기 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/LoginDTO.yaml#/components/schemas/FindAccountResDTO"

  # user-controller
  /user/getMyInfo:
    get:
      tags:
        - user-controller
      summary: "API_USER_0008 내 정보 조회"
      description: 내 정보 조회 API
      operationId: "getMyInfo"
      responses:
        "200":
          description: "내 정보 조회 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/UserDTO.yaml#/components/schemas/GetMyInfoResDTO"

  /user/withdraw:
    post:
      tags:
        - user-controller
      summary: "API_USER_0009 회원 탈퇴"
      description: 회원 탈퇴 API
      operationId: "withdraw"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./dto/user/UserDTO.yaml#/components/schemas/WithdrawReqDTO"
      responses:
        "200":
          description: "회원 탈퇴 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/UserDTO.yaml#/components/schemas/WithdrawResDTO"

  /user/update:
    post:
      tags:
        - user-controller
      summary: "API_USER_0010 회원 정보 변경"
      description: 회원 정보 변경 API
      operationId: "update"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./dto/user/UserDTO.yaml#/components/schemas/UpdateReqDTO"
      responses:
        "200":
          description: "회원 정보 변경 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/UserDTO.yaml#/components/schemas/UpdateResDTO"

  /user/updatePassword:
    post:
      tags:
        - user-controller
      summary: "API_USER_0011 비밀 번호 변경"
      description: 비밀 번호 변경 API
      operationId: "updatePassword"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./dto/user/UserDTO.yaml#/components/schemas/UpdatePasswordReqDTO"
      responses:
        "200":
          description: "비밀 번호 변경 성공"
          content:
            application/json:
              schema:
                $ref: "./dto/user/UserDTO.yaml#/components/schemas/UpdatePasswordResDTO"